<?php

/**
 * BaseTaskGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $user_id
 * @property boolean $hidden
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Tasks
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method integer             getUserId()      Returns the current record's "user_id" value
 * @method boolean             getHidden()      Returns the current record's "hidden" value
 * @method sfGuardUser         getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getTasks()       Returns the current record's "Tasks" collection
 * @method TaskGroup           setName()        Sets the current record's "name" value
 * @method TaskGroup           setUserId()      Sets the current record's "user_id" value
 * @method TaskGroup           setHidden()      Sets the current record's "hidden" value
 * @method TaskGroup           setSfGuardUser() Sets the current record's "sfGuardUser" value
 * @method TaskGroup           setTasks()       Sets the current record's "Tasks" collection
 * 
 * @package    boetticher
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaskGroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('task_group');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('hidden', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Task as Tasks', array(
             'local' => 'id',
             'foreign' => 'taskgroup_id'));
    }
}